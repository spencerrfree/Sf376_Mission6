// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sf376_Mission6.Models;

namespace Sf376_Mission6.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20230221163924_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Sf376_Mission6.Models.ApplicationResponse", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Title");

                    b.HasIndex("CategoryId");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            Title = "The Agengers",
                            CategoryId = 1,
                            Director = "Joss Whedon",
                            Edited = false,
                            LentTo = "",
                            Notes = "This is a classic",
                            Rating = "PG-13",
                            Year = 2012
                        },
                        new
                        {
                            Title = "Batman Begins",
                            CategoryId = 1,
                            Director = "Christopher Nolan",
                            Edited = false,
                            LentTo = "",
                            Notes = "This is my favorite!",
                            Rating = "PG-13",
                            Year = 2005
                        },
                        new
                        {
                            Title = "Lord of the Rings: The Return of the King",
                            CategoryId = 1,
                            Director = "Peter Jackson",
                            Edited = false,
                            LentTo = "",
                            Notes = "I had no idea this was from 2003 haha",
                            Rating = "PG-13",
                            Year = 2003
                        });
                });

            modelBuilder.Entity("Sf376_Mission6.Models.Category", b =>
                {
                    b.Property<int>("CatergoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CatergoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CatergoryId");

                    b.ToTable("Catergories");

                    b.HasData(
                        new
                        {
                            CatergoryId = 1,
                            CatergoryName = "Action/Adventure"
                        });
                });

            modelBuilder.Entity("Sf376_Mission6.Models.ApplicationResponse", b =>
                {
                    b.HasOne("Sf376_Mission6.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
